swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
  - application/octet-stream
  - application/javascript
# format of the responses to the client (Accepts)
produces:
  - application/json

securityDefinitions:
  allowOnlySA:
    name: Authorization
    type: apiKey
    in: header
  allowSAAndUA:
    name: Authorization
    type: apiKey
    in: header
  allowAllRoles:
    name: Authorization
    type: apiKey
    in: header
  allowOnlySAAndCA:
    name: Authorization
    type: apiKey
    in: header
paths:
  /checkRouteAccess:
    x-swagger-router-controller: permission.controller
    get:
      description: check route access.
      operationId: checkRouteAccess
      x-authz-admin-scope: []
      security:
        - allowAllRoles: []
      parameters:
        - name: path
          in: query
          description: route need to access.
          required: true
          type: string
      responses:
        201:
          description: Returns boolean status.
          schema:
            type: object
        400:
          description: Bad Json Formatting
          schema:
            $ref: "#/definitions/Error"
  /products:
    x-swagger-router-controller: products.controller
    post:
      description: create a new product
      # used as the method name of the controller
      operationId: createProduct
      security:
        - allowOnlySAAndCA: []
      # parameters:
      #   - in: body
      #     name: body
      #     description: new store details.
      #     required: true
      #     schema:
      #       $ref: "#/definitions/ProductPostRequest"
      responses:
        "201":
          description: Success creation of new product
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    get:
      description: get products list based on queries
      # used as the method name of the controller
      operationId: getProducts
      parameters:
        - name: query
          in: query
          type: string
      security:
        - allowAllRoles: []
      produces:
        - image/png
        - image/gif
        - image/jpeg
        - application/json
      responses:
        "200":
          description: Success get all products
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      description: update a product
      # used as the method name of the controller
      operationId: updateProduct
      security:
        - allowOnlySAAndCA: []
      # parameters:
      #   - in: body
      #     name: body
      #     description: new store details.
      #     required: true
      #     schema:
      #       $ref: "#/definitions/ProductPutRequest"
      responses:
        "201":
          description: Success creation of new product
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /products/{id}:
    x-swagger-router-controller: products.controller
    get:
      description: get by product id for single product
      # used as the method name of the controller
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: id of the product
          required: true
          type: string
      security:
        - allowOnlySAAndCA: []
      responses:
        "200":
          description: Success get a product details
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /products/search/query:
    x-swagger-router-controller: products.controller
    get:
      operationId: searchProducts
      description: to search products
      parameters:
        - name: storeId
          in: query
          required: true
          type: string
        - name: searchString
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success get searched products
          schema:
            type: object
        default:
          description: Error
          schema:
              $ref: "#/definitions/Error"

  /roles:
    x-swagger-router-controller: roles.controller
    get:
      description: get all roles list
      operationId: getAllRoles
      security:
        - allowAllRoles: []
      responses:
          "200":
            description: Success get all roles list
            schema:
              # a pointer to a definition
              type: object
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/Error"
    post:
      description: create a new role
      operationId: createRole
      security:
        - allowOnlySA: []
      parameters:
        - in: body
          name: body
          required: true
          description: new role details
          schema:
            $ref: "#/definitions/RolePostRequest"
      responses:
          "200":
            description: Success get all roles list
            schema:
              # a pointer to a definition
              type: object
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/Error"
  /store-unassigned:
    # binds a127 app logic to a route
    x-swagger-router-controller: stores.controller
    get:
      description: get all stores list not assigned to any user
      operationId: getAllStoresUnassigned
      security:
       - allowAllRoles: []
      parameters:
        - name: query
          in: query
          type: string
      responses:
        "200":
          description: Success get all stores list
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /store:
    # binds a127 app logic to a route
    x-swagger-router-controller: stores.controller
    post:
      description: create a new store
      # used as the method name of the controller
      operationId: createStore
      security:
        - allowOnlySA: []
      # parameters:
      #   - in: body
      #     name: body
      #     description: new store details.
      #     required: true
      #     schema:
      #       $ref: "#/definitions/StorePostRequest"
      responses:
        "201":
          description: Success creation
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    get:
      description: get all stores list
      operationId: getAllStoreData
      security:
       - allowAllRoles: []
      parameters:
        - name: query
          in: query
          type: string
      responses:
        "200":
          description: Success get all stores list
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put: 
      description: update store data 
      operationId: updateStoreData
      security:
        - allowOnlySAAndCA: []
      responses:
        "201":
          description: Success creation
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /store/{id}:
    x-swagger-router-controller: stores.controller 
    get:
      description: get store details by id
      operationId: getStoreDetailsById
      security:
        - allowAllRoles: []
      parameters:
        - name: id
          in: path
          description: Id of the store
          required: true
          type: string
      responses:
        "200":
          description: Success store details by id
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"        
  /users:
    x-swagger-router-controller: users.controller
    get:
      description: get all active user data
      operationId: getAllUserData
      security:
        - allowOnlySAAndCA: []
      responses:
        "200":
          description: Success get all active user data
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      description: user update
        # used as the method name of the controller
      operationId: updateUserData
      security:
        - allowAllRoles: []
      parameters:
        - in: body
          name: body
          description: user update details.
          required: true
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
              roleId:
                type: string
              stores:
                type: string
              userName:
                type: string
              email:
                type: string
                minLength: 1
                pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
              mobile:
                type: string
                maxLength: 256
                minLength: 4
              password:
                type: string
                maxLength: 256
                minLength: 4
      responses:
        "201":
          description: Success user update
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{id}:
    x-swagger-router-controller: users.controller 
    get:
      description: get user details by id
      operationId: getUserDetailsById
      security:
        - allowAllRoles: []
      parameters:
        - name: id
          in: path
          description: Id of the users
          required: true
          type: string
      responses:
        "200":
          description: Success user details by id
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"                               
  /login:
    x-swagger-router-controller: loginManagement.controller
    post:
      description: user login
      # used as the method name of the controller
      operationId: userLogin
      parameters:
        - in: body
          name: body
          description: user login details.
          required: true
          schema:
            type: object
            required:
              - mobile
              - password
            properties:
              mobile:
                type: string
                maxLength: 256
                minLength: 4
              password:
                type: string
                maxLength: 256
                minLength: 4
      responses:
        "201":
          description: Success login
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /userRegister:
    x-swagger-router-controller: loginManagement.controller
    post:
      description: user register
      # used as the method name of the controller
      operationId: userRegistration
      parameters:
        - in: body
          name: body
          description: user register details.
          required: true
          schema:
            type: object
            required:
              - roleId
              - stores
              - userName
              - email
              - mobile
              - password
            properties:
              roleId:
                type: string
              stores:
                type: string
              userName:
                type: string
              email:
                type: string
                minLength: 1
                pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
              mobile:
                type: string
                maxLength: 256
                minLength: 4
              password:
                type: string
                maxLength: 256
                minLength: 4
      responses:
        "201":
          description: Success user registration
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"          
    
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  StorePostRequest:
    required:
      - storeName
    properties:
      storeName: 
        type: string
      storeType: 
        type: string
      storeCategory: 
        type: string
      storeAddress: 
        type : string
      storePincode: 
        type : number
      storeState: 
        type: string
      storeCity: 
        type : string
      isActive: 
        type : boolean
      longitude: 
        type : number
      latitude: 
        type : number
      createdAt:
        type : string
      updatedAt : 
        type : string
  StorePutRequest: 
    required:
      - id
    properties:
      storeName: 
        type: string
      id:
        type: string  
      storeType: 
        type: string
      storeCategory: 
        type: string
      storeAddress: 
        type: string
      storePincode: 
        type: number
      storeState: 
        type: string
      storeCity: 
        type: string
      isActive: 
        type: boolean
      longitude: 
        type: number
      latitude: 
        type: number
      createdAt:
        type: string
      updatedAt: 
        type: string
  Error:
    required:
      - message
    properties:
      message:
        type: string   
  ProductPostRequest:
    required:
      - productName
      - storeId
    properties:
      productName:
        type: string
        minLength: 1
      storeId:
        type: string
        minLength: 1
      productCompany:
        type: string
      productDesc:
        type: string
      isAvailable:
        type: boolean
      productCategory:
        type: string
      warranty:
        type: string
      price:
        type: string
      qtyType:
        type: string
      quantity:
        type: string
      searchTags:
        type: array
        items:
          type: string
      size:
        type: string
  ProductPutRequest:
    required:
      - id
    properties:
      id:
        type: string
        minLength: 1
      productName:
        type: string
        minLength: 1
      storeId:
        type: string
        minLength: 1
      productCompany:
        type: string
      productDesc:
        type: string
      isAvailable:
        type: boolean
      productCategory:
        type: string
      warranty:
        type: string
      price:
        type: string
      qtyType:
        type: string
      quantity:
        type: string
      searchTags:
        type: array
        items:
          type: string
      size:
        type: string
  RolePostRequest:
    required:
      - roleKey
      - roleDesc
      - roleName
    properties:
      roleKey:
        type: string
        enum: ["SA", "CA", "UA"]
      roleDesc:
        type: string
      roleName:
        type: string

