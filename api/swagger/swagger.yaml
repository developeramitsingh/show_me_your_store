swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
  - application/octet-stream
  - application/javascript
# format of the responses to the client (Accepts)
produces:
  - application/json

securityDefinitions:
  allowOnlySA:
    name: Authorization
    type: apiKey
    in: header
paths:
  /store:
    # binds a127 app logic to a route
    x-swagger-router-controller: stores.controller
    post:
      description: create a new store
      # used as the method name of the controller
      operationId: createStore
      parameters:
        - in: body
          name: body
          description: new store details.
          required: true
          schema:
            $ref: "#/definitions/StoreRequest"
      responses:
        "201":
          description: Success creation
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    get:
      description: get all store data
      operationId: getAllStoreData
      responses:
        "201":
          description: Success get all store data
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put: 
      description: update store data 
      operationId: updateStoreData
      parameters:
        - in: body
          name: body
          description: update store details.
          required: true
          schema:
            $ref: "#/definitions/StorePutRequest"
      responses:
        "201":
          description: Success creation
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users:
    x-swagger-router-controller: users.controller
    get:
      description: get all active user data
      operationId: getAllUserData
      responses:
        "201":
          description: Success get all active user data
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /login:
    x-swagger-router-controller: loginManagement.controller
    post:
      description: user login
      # used as the method name of the controller
      operationId: userLogin
      parameters:
        - in: body
          name: body
          description: user login details.
          required: true
          schema:
            type: object
            required:
              - mobile
              - password
            properties:
              mobile:
                type: string
                maxLength: 256
                minLength: 4
              password:
                type: string
                maxLength: 256
                minLength: 4
      responses:
        "201":
          description: Success login
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /userRegister:
    x-swagger-router-controller: loginManagement.controller
    post:
      description: user register
      # used as the method name of the controller
      operationId: userRegistration
      parameters:
        - in: body
          name: body
          description: user register details.
          required: true
          schema:
            type: object
            required:
              - roleId
              - roleKey
              - stores
              - userName
              - email
              - mobile
              - password
            properties:
              roleId:
                type: string
              roleKey:
                type: string
              stores:
                type: string
              userName:
                type: string
              email:
                type: string
                minLength: 1
                pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
              mobile:
                type: string
                maxLength: 256
                minLength: 4
              password:
                type: string
                maxLength: 256
                minLength: 4
      responses:
        "201":
          description: Success user registration
          schema:
            # a pointer to a definition
            type: object
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"          

                  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  StoreRequest:
    required:
      - storeName
    properties:
      storeName:
        type: string
  Error:
    required:
      - message
    properties:
      message:
        type: string

  StorePutRequest: 
    required:
      - id
    properties:
      storeName: 
        type: string
      id :
        type : string  
      storeType: 
        type: string
      storeCategory: 
        type: string
      storeAddress: 
        type : string
      storePincode: 
        type : number
      storeState: 
        type: string
      storeCity: 
        type : string
      isActive: 
        type : boolean
      longitude: 
        type : number
      latitude: 
        type : number
      createdAt:
        type : string
      updatedAt : 
        type : string           
